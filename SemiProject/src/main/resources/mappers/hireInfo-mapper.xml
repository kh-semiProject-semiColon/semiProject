<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="kr.co.semi.board.model.mapper.HireBoardMapper">
	
	<resultMap type="hireInfo" id="hire_rm">
		<id property="hireNO" column="HIRE_NO"/>
		
		<!-- collection 태그
			 : SELECT로 조회된 결과를 컬렉션(List)에 담아 지정된 필드에 세팅
		 
		 	 property : List 담을 DTO 필드명
		 	 select   : 실행할 select의 id
		 	 column   : 조회 결과 중 지정된 컬럼의 값을 파라미터로 전달
			 javaType : List(컬렉션)의 타입을 지정
			 ofType   : List(컬렉션)의 제네릭(타입제한) 지정
		 -->
		
		<!-- 해당 게시글 댓글 목록 조회 후 필드에 저장 -->
		<collection 
		property="commentList"
		select="selectCommentList"
		column="HIRE_NO"
		javaType="java.util.ArrayList"
		ofType="HireComment"
		/>

	</resultMap>
	
	<!-- 게시글 수 조회 -->
	<select id="getListCount">
	 SELECT COUNT(*)
	 FROM "HIRE_INFO"
	 WHERE HIRE_DEL_FL = 'N'
	</select>
	
	<!-- 지정된 페이지 목록 조회 -->
	<select id="selecHireBoardList">
	 SELECT HIRE_NO, HIRE_TITLE, HIRE_READ_COUNT, HIRE_CONTENT, 
	 		MEMBER_NICKNAME, PROFILE_IMG, STUDY_MAIN_IMG, 
	 
	  <![CDATA[
		 CASE
			WHEN SYSDATE - HIRE_DATE < 1 / 24 / 60
			THEN FLOOR((SYSDATE - HIRE_DATE) *24 *60 *60) || '초 전'
			
			WHEN SYSDATE - HIRE_DATE < 1 / 24
			THEN FLOOR((SYSDATE - HIRE_DATE) *24 * 60) || '분 전'
			
			WHEN SYSDATE - HIRE_DATE < 1
			THEN FLOOR((SYSDATE - HIRE_DATE) *24) || '시간 전'
		 ELSE TO_CHAR(HIRE_DATE, 'YYYY-MM-DD')
		 END HIRE_DATE	
	 ]]>
	 
	 FROM "HIRE_INFO" H
	 JOIN "MEMBER" M ON(H.MEMBER_NO = M.MEMBER_NO)
	 JOIN "STUDY" S ON (H.STUDY_NO  = S.STUDY_NO)
	 WHERE HIRE_DEL_FL = 'N'
	 AND STUDY_DEL_FL = 'N'
	 ORDER BY HIRE_NO DESC
	</select>
	
	<!-- 내 스터디 조회 -->
	<select id="showStudySelect">
	 SELECT S.*, SM.STUDY_CAP
	 FROM STUDY_MEMBER SM
	 JOIN STUDY S ON SM.STUDY_NO = S.STUDY_NO
	 WHERE SM.MEMBER_NO = #{memberNo}
	 AND S.STUDY_DEL_FL = 'N'
	</select>
	
	<!-- 구인 게시글 작성 -->
	<insert id="writeHireBoardInsert" useGeneratedKeys="true" parameterType="HireInfo">
	  <selectKey order="BEFORE" resultType="_int" keyProperty="hireNo">
	    SELECT SEQ_BOARD_NO.NEXTVAL FROM DUAL
	  </selectKey>
	  INSERT INTO HIRE_INFO (
	    HIRE_NO, HIRE_READ_COUNT, HIRE_DEL_FL, HIRE_DATE,
	    MEMBER_NO, HIRE_UPDATE, HIRE_CONTENT, STUDY_NO,
	    DAY_CAN_JOIN, HIRE_COUNT, HIRE_TITLE
	  ) VALUES (
	    #{hireNo}, DEFAULT, DEFAULT, DEFAULT,
	    #{memberNo}, DEFAULT, #{hireContent}, #{studyNo},
	    #{dayCanJoin}, #{hireCount}, #{hireTitle}
	  )
	</insert>
	
	<!-- 현재 인원 구하기 -->
	<select id="hireCount">
		SELECT COUNT(*) HIRE_COUNT
		FROM "STUDY_MEMBER"
		WHERE STUDY_NO = #{studyNo}
	</select>

	<!-- 구인 게시글 상세 조회 -->
	<select id="selectOne">
	 SELECT HIRE_NO, HIRE_TITLE, HIRE_CONTENT, STUDY_NO, HIRE_READ_COUNT,
	 MEMBER_NO, MEMBER_NICKNAME, PROFILE_IMG, MEMBER_NICKNAME, STUDY_NO, DAY_CAN_JOIN, HIRE_COUNT,
	 TO_CHAR(HIRE_DATE, 'YYYY"년" MM"월" DD"일" HH24:MI:SS') HIRE_DATE,
	 TO_CHAR(HIRE_UPDATE, 'YYYY"년" MM"월" DD"일" HH24:MI:SS') HIRE_UPDATE
	
	 FROM "MEMBER"
	 JOIN "HIRE_INFO" USING(MEMBER_NO)
	 WHERE HIRE_DEL_FL = 'N'
	 AND HIRE_NO = #{hireNo}
	</select>
	
	<!-- 조회 수 1 증가 -->
	<update id="updateHireReadCount">
	 UPDATE "HIRE_INFO" SET
	 HIRE_READ_COUNT =HIRE_READ_COUNT + 1
	 WHERE HIRE_NO = #{hireNo}
	</update>
	
	<!-- 구인 게시글 스터디 조회 -->
	<select id="selectStudyNo">
	 SELECT STUDY_NAME, STUDY_MAX_COUNT, STUDY_TYPE, STUDY_PERIOD
	 FROM "STUDY"
	 WHERE STUDY_DEL_FL = 'N'
	 AND STUDY_NO = #{studyNo}
	</select>
	
	  <!-- 게시글 부분 수정 -->
	  <update id="hireUpdate">
	  	UPDATE "HIRE_INFO" SET
	  	HIRE_TITLE = #{hireTitle},
	  	HIRE_CONTENT = #{hireContent},
	  	HIRE_UPDATE = SYSDATE,
	  	DAY_CAN_JOIN = #{dayCanJoin}
	  	WHERE HIRE_NO = #{hireNo}
	  	AND MEMBER_NO = #{memberNo}
	  </update>
	  
	  <!-- 게시글 삭제 -->
	    <update id="hireDelete">
		  	UPDATE "HIRE_INFO" SET
		  	HIRE_DEL_FL = 'Y'
		  	WHERE HIRE_NO = #{hireNo}
		  	AND MEMBER_NO = #{memberNo}
		  </update>

	<!-- 상세 조회한 게시글의 댓글 목록 조회 -->
	<select id="selectCommentList" resultType="HireComment">
		SELECT LEVEL, C.* FROM
		(SELECT HIRE_COMMENT_NO, HIRE_COMMENT_CONTENT,
		    TO_CHAR(HIRE_COMMENT_WRITTEN_DATE, 'YYYY"년" MM"월" DD"일" HH24"시" MI"분" SS"초"') HIRE_COMMENT_WRITTEN_DATE,
		    HIRE_NO, MEMBER_NO, MEMBER_NICKNAME, PROFILE_IMG, HIRE_PARENT_COMMENT_NO, HIRE_COMMENT_DEL_FL
		FROM "HIRE_COMMENT"
		JOIN MEMBER USING(MEMBER_NO)
		WHERE HIRE_NO = #{hireNo}) C
		WHERE COMMENT_DEL_FL = 'N'
		OR 0 != (SELECT COUNT(*) FROM "HIRE_COMMENT" SUB
					WHERE SUB.HIRE_PARENT_COMMENT_NO = C.HIRE_COMMENT_NO
					AND HIRE_COMMENT_DEL_FL = 'N')
		START WITH HIRE_PARENT_COMMENT_NO IS NULL
		CONNECT BY PRIOR HIRE_COMMENT_NO = HIRE_PARENT_COMMENT_NO
		ORDER SIBLINGS BY HIRE_COMMENT_NO
	</select>
	
	<!-- 멤버 초대 -->
	<insert id="memberInvite">
		INSERT INTO STUDY_MEMBER (
			STUDY_NO, MEMBER_NO, STUDY_CAP
		) VALUES (#{studyNo}, #{memberNo}, 'N')
	</insert>
	
	
		<!-- 검색 조건이 맞는 게시글 수 조회 -->
	<select id="getSerchCount">
		SELECT COUNT(*)
		FROM "HIRE_INFO"
		
		<!-- 작성자 검색인 경우 -->
		<if test='key == "w"'>
			JOIN "MEMBER" USING(MEMBER_NO)
		</if>
		
		WHERE HIRE_DEL_FL = 'N'
		
		<choose>
			<!-- 제목 검색 (key 값 "t"인 경우) -->
			<when test='key == "t"'>
				AND HIRE_TITLE LIKE '%'|| #{query} ||'%'
			</when>
			
			<!-- 제목 검색 (key 값 "c"인 경우) -->
			<when test='key == "c"'>
				AND HIRE_CONTENT LIKE '%'|| #{query} ||'%'
			</when>
			
			<!-- 제목 검색 (key 값 "tc"인 경우) -->
			<when test='key == "tc"'>
				AND (
					HIRE_TITLE LIKE '%'|| #{query} ||'%'
					OR
					HIRE_CONTENT LIKE '%'|| #{query} ||'%'
				)
			</when>
			
			<!-- 제목 검색 (key 값 "w"인 경우) -->
			<otherwise>
				AND MEMBER_NICKNAME LIKE '%'|| #{query} ||'%'
			</otherwise>
		</choose>
		
	</select>
	
	<!-- 검색 결과 목록 조회 -->
	<select id="selectSearchList">
		SELECT 
		  HIRE_NO,
		  HIRE_TITLE,
		  HIRE_CONTENT,
		  H.STUDY_NO,
		  HIRE_READ_COUNT,
		  H.MEMBER_NO,
		  M.MEMBER_NICKNAME,
		  M.PROFILE_IMG,
		  H.DAY_CAN_JOIN,
		  HIRE_COUNT,
		
		  TO_CHAR(HIRE_DATE, 'YYYY"년" MM"월" DD"일" HH24:MI:SS') AS HIRE_DATE_FORMAT,
		  TO_CHAR(HIRE_UPDATE, 'YYYY"년" MM"월" DD"일" HH24:MI:SS') AS HIRE_UPDATE_FORMAT,
		
		  <![CDATA[
		    CASE
		      WHEN SYSDATE - HIRE_DATE < 1 / 24 / 60
		        THEN FLOOR((SYSDATE - HIRE_DATE) *24 *60 *60) || '초 전'
		      WHEN SYSDATE - HIRE_DATE < 1 / 24
		        THEN FLOOR((SYSDATE - HIRE_DATE) *24 * 60) || '분 전'
		      WHEN SYSDATE - HIRE_DATE < 1
		        THEN FLOOR((SYSDATE - HIRE_DATE) *24) || '시간 전'
		      ELSE TO_CHAR(HIRE_DATE, 'YYYY-MM-DD')
		    END AS HIRE_DATE_RELATIVE
		  ]]>
		
		FROM HIRE_INFO H
		JOIN MEMBER M ON (H.MEMBER_NO = M.MEMBER_NO)
		JOIN STUDY S ON (H.STUDY_NO = S.STUDY_NO)
		WHERE HIRE_DEL_FL = 'N'
		AND STUDY_DEL_FL = 'N'
		
		<choose>
		  <when test='key == "t"'>
		    AND HIRE_TITLE LIKE '%' || #{query} || '%'
		  </when>
		  <when test='key == "c"'>
		    AND HIRE_CONTENT LIKE '%' || #{query} || '%'
		  </when>
		  <when test='key == "tc"'>
		    AND (
		      HIRE_TITLE LIKE '%' || #{query} || '%'
		      OR HIRE_CONTENT LIKE '%' || #{query} || '%'
		    )
		  </when>
		  <otherwise>
		    AND M.MEMBER_NICKNAME LIKE '%' || #{query} || '%'
		  </otherwise>
		</choose>
		
		ORDER BY HIRE_NO DESC
	</select>
	
	<!-- 팝업창 -->
	<select id="getResumeByMemberNo">
		SELECT MEMBER_NO, MEMBER_NICKNAME, MEMBER_INTRODUCE, MEMBER_MAJOR, PROFILE_IMG
		FROM MEMBER
		WHERE MEMBER_NO = #{memberNo}
		AND MEMBER_DEL_FL = 'N'
	</select>
	
	<!-- 이전에 초대 했는지 확인 -->
	<select id="inInvitation">
		SELECT COUNT(*)
		FROM STUDY_MEMBER
		WHERE STUDY_NO = #{studyNo}
		AND MEMBER_NO = #{memberNo}
	</select>
</mapper>
