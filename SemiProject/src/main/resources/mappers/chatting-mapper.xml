<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.semi.chatting.model.mapper.ChattingMapper">

    <!-- 채팅 메시지 저장 -->
    <insert id="insertMessage" parameterType="Chatting">
        <selectKey keyProperty="messageNo" resultType="int" order="BEFORE">
            SELECT SEQ_MESSAGE_NO.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO STUDY_CHAT_MESSAGE (
            MESSAGE_NO,
            STUDY_NO,
            SENDER_NO,
            CONTENT,
            SEND_TIME
        ) VALUES (
            #{messageNo},
            #{studyNo},
            #{senderNo},
            #{content},
            SYSTIMESTAMP
        )
    </insert>

    
    <select id="getMessagesByStudyNo" parameterType="int" resultType="Chatting">
    SELECT * FROM (
        SELECT 
            M.MESSAGE_NO as messageNo,
            M.STUDY_NO as studyNo,
            M.SENDER_NO as senderNo,
            M.CONTENT as content,
            TO_CHAR(M.SEND_TIME, 'YYYY.MM.DD HH24:MI') as sendTime,
            U.PROFILE_IMG as profileImg  <!-- 프로필 추가 -->
        FROM STUDY_CHAT_MESSAGE M
        JOIN MEMBER U ON M.SENDER_NO = U.MEMBER_NO
        WHERE M.STUDY_NO = #{studyNo}
        ORDER BY M.MESSAGE_NO DESC
    ) WHERE ROWNUM &lt;= 100
    ORDER BY messageNo ASC
</select>

    <!-- 특정 메시지 번호 이후의 새 메시지들 조회 -->
    <select id="getMessagesAfter" resultType="Chatting">
        SELECT 
            MESSAGE_NO as messageNo,
            STUDY_NO as studyNo,
            SENDER_NO as senderNo,
            CONTENT as content,
            TO_CHAR(SEND_TIME, 'YYYY.MM.DD HH24:MI') as sendTime
        FROM STUDY_CHAT_MESSAGE 
        WHERE STUDY_NO = #{studyNo}
        AND MESSAGE_NO > #{lastMessageNo}
        ORDER BY messageNo ASC
    </select>

    <!-- 스터디 멤버 여부 확인 -->
    <select id="isStudyMember" resultType="boolean">
        SELECT CASE 
            WHEN COUNT(*) > 0 THEN 1 
            ELSE 0 
        END
        FROM STUDY_MEMBER 
        WHERE STUDY_NO = #{studyNo} 
        AND MEMBER_NO = #{memberNo}
    </select>

    <!-- 스터디의 최근 메시지 조회 (개수 제한) -->
    <select id="getRecentMessages" resultType="Chatting">
        SELECT * FROM (
            SELECT 
                MESSAGE_NO as messageNo,
                STUDY_NO as studyNo,
                SENDER_NO as senderNo,
                CONTENT as content,
                TO_CHAR(SEND_TIME, 'YYYY.MM.DD HH24:MI') as sendTime
            FROM STUDY_CHAT_MESSAGE 
            WHERE STUDY_NO = #{studyNo}
            ORDER BY MESSAGE_NO DESC
        ) WHERE ROWNUM &lt;= #{limit}
        ORDER BY messageNo ASC
    </select>

</mapper>