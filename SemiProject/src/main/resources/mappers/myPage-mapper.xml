<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.semi.myPage.model.mapper.MyPageMapper">

	<!-- 일정 조회하기 -->
	<select id="selectMember">
		SELECT MEMBER_MAJOR, MEMBER_INTRODUCE, PROFILE_IMG
		FROM MEMBER
		WHERE MEMBER_NO = #{memberNo}
	</select>

	<update id="updateInfo">
		UPDATE "MEMBER" SET
		MEMBER_NICKNAME = #{memberNickname},
		MEMBER_TEL = #{memberTel},
		MEMBER_MAJOR = #{memberMajor},
		MEMBER_ADDRESS = #{memberAddress},
		MEMBER_INTRODUCE = #{memberIntroduce}
		WHERE MEMBER_NO = #{memberNo}
	</update>

	<select id="selectPw">
		SELECT MEMBER_PW
		FROM "MEMBER"
		WHERE MEMBER_NO = #{memberNo}
	</select>

	<update id="changePw">
		UPDATE "MEMBER" SET
		MEMBER_PW = #{encPw}
		WHERE MEMBER_NO = #{memberNo}
	</update>

	<update id="deleteMember">
		UPDATE "MEMBER" SET
		MEMBER_DEL_FL = 'Y'
		WHERE MEMBER_NO = #{memberNo}
	</update>


	<resultMap id="boardResultMap" type="kr.co.semi.board.model.dto.Board">
		<result property="boardNo" column="boardNo" />
		<result property="boardTitle" column="boardTitle" />
		<result property="memberNickname" column="memberNickname" />
		<result property="boardWriteDate" column="boardWriteDate" />
		<result property="readCount" column="readCount" />
		<result property="likeCount" column="likeCount" />
		<result property="boardCode" column="boardCode" />
	</resultMap>

	<select id="selectBoard" resultMap="boardResultMap" parameterType="int">
		SELECT
		STUDY_BOARD_NO AS boardNo,
		STUDY_BOARD_TITLE AS boardTitle,
		MEMBER_NICKNAME AS memberNickname,
		TO_CHAR(STUDY_BOARD_WRITE_DATE, 'YY.MM.DD') AS boardWriteDate,
		READ_COUNT AS readCount,
		LIKE_COUNT AS likeCount,
		1 AS boardCode
		FROM (
		SELECT
		sb.STUDY_BOARD_NO,
		sb.STUDY_BOARD_TITLE,
		m.MEMBER_NICKNAME,
		sb.STUDY_BOARD_WRITE_DATE,
		sb.READ_COUNT,
		COUNT(bl.BOARD_NO) AS LIKE_COUNT
		FROM STUDY_BOARD sb
		LEFT JOIN MEMBER m ON sb.MEMBER_NO = m.MEMBER_NO
		LEFT JOIN BOARD_LIKE bl ON sb.STUDY_BOARD_NO = bl.BOARD_NO
		WHERE sb.MEMBER_NO = 1
		GROUP BY sb.STUDY_BOARD_NO, sb.STUDY_BOARD_TITLE, m.MEMBER_NICKNAME,
		sb.STUDY_BOARD_WRITE_DATE, sb.READ_COUNT
		)

		UNION ALL

		SELECT
		BOARD_NO AS boardNo,
		BOARD_TITLE AS boardTitle,
		MEMBER_NICKNAME AS memberNickname,
		TO_CHAR(BOARD_WRITE_DATE, 'YY.MM.DD') AS boardWriteDate,
		READ_COUNT AS readCount,
		LIKE_COUNT AS likeCount,
		2 AS boardCode
		FROM (
		SELECT
		b.BOARD_NO,
		b.BOARD_TITLE,
		m.MEMBER_NICKNAME,
		b.BOARD_WRITE_DATE,
		b.READ_COUNT,
		COUNT(bl.BOARD_NO) AS LIKE_COUNT
		FROM BOARD b
		LEFT JOIN MEMBER m ON b.MEMBER_NO = m.MEMBER_NO
		LEFT JOIN BOARD_LIKE bl ON b.BOARD_NO = bl.BOARD_NO
		WHERE b.MEMBER_NO = 1
		GROUP BY b.BOARD_NO, b.BOARD_TITLE, m.MEMBER_NICKNAME,
		b.BOARD_WRITE_DATE, b.READ_COUNT
		)
		ORDER BY boardWriteDate DESC
	</select>

	<select id="selectComment">
		SELECT HIRE_NO, HIRE_TITLE, HIRE_COMMENT_CONTENT, HIRE_COMMENT_DATE
		FROM HIRE_INFO h
		JOIN HIRE_COMMENT USING(HIRE_NO)
		WHERE h.MEMBER_NO= #{memberNo}
		UNION
		SELECT STUDY_BOARD_NO, STUDY_BOARD_TITLE, STUDY_COMMENT_CONTENT,
		STUDY_COMMENT_DATE
		FROM STUDY_BOARD s
		JOIN STUDY_COMMENT USING(STUDY_BOARD_NO)
		WHERE s.MEMBER_NO = #{memberNo}
		UNION
		SELECT BOARD_NO, BOARD_TITLE, COMMENT_CONTENT, COMMENT_WRITTEN_DATE
		FROM BOARD b
		JOIN "COMMENT" USING(BOARD_NO)
		WHERE b.MEMBER_NO = #{memberNo}
	</select>

</mapper>
