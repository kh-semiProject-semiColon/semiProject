<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.semi.studyboard.model.mapper.StudyBoardMapper">

<!-- 스터디 정보 조회 -->
<select id="getStudyInfo" resultType="Study">
SELECT S.STUDY_NO, S.STUDY_NAME, 
       S.STUDY_MAX_COUNT, 
       TO_CHAR(S.STUDY_DATE, 'YYYY-MM-DD') AS STUDY_DATE, 
       S.STUDY_TYPE, S.STUDY_PERIOD, S.STUDY_MAIN_IMG,
       SM.STUDY_CAP
FROM STUDY S
JOIN STUDY_MEMBER SM ON S.STUDY_NO = SM.STUDY_NO
JOIN MEMBER M ON SM.MEMBER_NO = M.MEMBER_NO
WHERE S.STUDY_NO = #{studyNo}
AND SM.MEMBER_NO = #{memberNo}
AND S.STUDY_DEL_FL = 'N'
AND M.MEMBER_DEL_FL = 'N'
</select>

<select id="getStudyrule">
SELECT RULE_CONTENT
FROM STUDY_RULE
WHERE STUDY_NO=#{studyNo}
</select>
<!-- 스터디 내규 조회 -->
<select id="ruleCount">
SELECT COUNT(*)
FROM STUDY_RULE
WHERE STUDY_NO=#{studyNo}
</select>


<!-- 스터디 내규 수정 -->
<update id="insertOrUpdateRule">
UPDATE STUDY_RULE SET
RULE_CONTENT = #{ruleContent}
WHERE STUDY_NO = #{studyNo}
</update>

<!-- 스터디 내규 등록 -->
<insert id="insertRule">
INSERT INTO "STUDY_RULE" VALUES (#{studyNo}, #{ruleContent})
</insert>


<!-- 스터디 정보 수정 -->
<update id="updateStudyInfo">
UPDATE STUDY 
SET STUDY_NAME = #{studyName},
    STUDY_MAX_COUNT = #{studyMaxCount},
    STUDY_TYPE = #{studyType},
    STUDY_PERIOD = #{studyPeriod}
    <if test="studyMainImg != null">
    , STUDY_MAIN_IMG = #{studyMainImg}
    </if>
WHERE STUDY_NO = #{studyNo}
</update>

<!-- 스터디 멤버 탈퇴 -->
<delete id="withdrawMember">
DELETE FROM STUDY_MEMBER 
WHERE STUDY_NO = #{studyNo} 
AND MEMBER_NO = #{memberNo}
</delete>

<!-- 스터디 해체 -->
<update id="deleteStudy">
UPDATE STUDY 
SET STUDY_DEL_FL = 'Y'
WHERE STUDY_NO = #{studyNo}
</update>

<!-- 스터디 멤버 권한 확인 -->
<select id="checkMemberRole" resultType="String">
SELECT STUDY_CAP
FROM STUDY_MEMBER
WHERE MEMBER_NO = #{memberNo}
</select>

<!-- 내가 작성한 스터디 게시글 조회 -->
<select id="getMyPosts" resultType="StudyBoard">
<![CDATA[
SELECT * FROM (
    SELECT SB.STUDY_BOARD_NO, SB.STUDY_BOARD_TITLE, SB.STUDY_BOARD_CONTENT,
           TO_CHAR(SB.STUDY_BOARD_WRITE_DATE, 'YYYY-MM-DD') AS STUDY_BOARD_WRITE_DATE,
           SB.READ_COUNT,
           M.MEMBER_NICKNAME,
           ROW_NUMBER() OVER (ORDER BY SB.STUDY_BOARD_WRITE_DATE DESC) AS RN
    FROM STUDY_BOARD SB
    JOIN MEMBER M ON SB.MEMBER_NO = M.MEMBER_NO
    WHERE SB.STUDY_NO = #{studyNo} 
    AND SB.STUDY_BOARD_DEL_FL = 'N'
) WHERE RN > #{offset} AND RN <= #{offset} + #{limit}
]]>
</select>

<!-- 현재 스터디 멤버 수 조회 -->
<select id="getCurrentMemberCount" resultType="int">
SELECT COUNT(*)
FROM STUDY_MEMBER
WHERE STUDY_NO = #{studyNo}
</select>

<!-- 스터디 멤버 목록 조회 -->
<select id="getStudyMembers" resultType="java.util.HashMap">
SELECT SM.MEMBER_NO, M.MEMBER_NICKNAME, SM.STUDY_CAP
FROM STUDY_MEMBER SM
JOIN MEMBER M ON SM.MEMBER_NO = M.MEMBER_NO
WHERE SM.STUDY_NO = #{studyNo}
AND M.MEMBER_DEL_FL = 'N'
ORDER BY SM.STUDY_CAP DESC
</select>

<!-- 검색 조건이 맞는 게시글 수 조회 -->
	<select id="getBoardSearchCount">
		SELECT COUNT(*)
		FROM "STUDY_BOARD"
		
		<!--작성자 검색인 경우-->
		<if test='key=="w"'>
			JOIN "MEMBER" USING(MEMBER_NO)
		</if>
		WHERE STUDY_BOARD_DEL_FL = 'N'
		
		<choose>
			<!-- 제목 검색인 경우 key 값 "t"-->
			<when test='key=="t"'>
				AND STUDY_BOARD_TITLE LIKE '%' || #{query} || '%'
			</when>
			
			<!-- 내용 검색인 경우 key 값 "c"-->
			<when test='key=="c"'>
				AND STUDY_BOARD_CONTENT LIKE '%' || #{query} || '%'
			</when>
			
			<!-- 제목+내용 검색인 경우 key 값 "tc"-->
			<when test='key=="tc"'>
				AND (STUDY_BOARD_TITLE LIKE '%' || #{query} || '%'
				OR STUDY_BOARD_CONTENT LIKE '%' || #{query} || '%')
			</when>
			
			<!-- 작성자 검색인 경우 key 값 "w"-->
			<otherwise>
				AND MEMBER_NICKNAME LIKE '%'||#{query}||'%'
			</otherwise>
		</choose>
	</select>
	
	<select id="selectBoardSearchList">
		SELECT STUDY_BOARD_NO, STUDY_BOARD_TITLE, READ_COUNT, MEMBER_NICKNAME,
		(SELECT COUNT(*)
		FROM "STUDY_COMMENT" C
		WHERE C.STUDY_BOARD_NO = B.STUDY_BOARD_NO ) COMMENT_COUNT,
		
		(SELECT COUNT(*)
		FROM "STUDY_BOARD_LIKE" L
		WHERE L.STUDY_BOARD_NO =B. STUDY_BOARD_NO) LIKE_COUNT,
		<![CDATA[
		CASE
			
			WHEN SYSDATE - STUDY_BOARD_WRITE_DATE < 1 / 24 / 60
			THEN FLOOR((SYSDATE - STUDY_BOARD_WRITE_DATE) * 24 * 60 * 60) || '초 전'
			
			WHEN SYSDATE - STUDY_BOARD_WRITE_DATE < 1 /24
			THEN FLOOR((SYSDATE - STUDY_BOARD_WRITE_DATE) * 24 * 60)|| '분 전'
			
			WHEN SYSDATE - STUDY_BOARD_WRITE_DATE < 1
			THEN FLOOR((SYSDATE - STUDY_BOARD_WRITE_DATE) * 24) || '시간 전'
		ELSE TO_CHAR(STUDY_BOARD_WRITE_DATE, 'YYYY-MM-DD')
		END STUDY_BOARD_WRITE_DATE
		]]>
		
		FROM "STUDY_BOARD" B
		JOIN "MEMBER" M ON(B.MEMBER_NO = M.MEMBER_NO)
		WHERE B.STUDY_BOARD_DEL_FL ='N'
		
		<choose>
			<!-- 제목 검색인 경우 key 값 "t"-->
			<when test='key=="t"'>
				AND STUDY_BOARD_TITLE LIKE '%' || #{query} || '%'
			</when>
			
			<!-- 내용 검색인 경우 key 값 "c"-->
			<when test='key=="c"'>
				AND STUDY_BOARD_CONTENT LIKE '%' || #{query} || '%'
			</when>
			
			<!-- 제목+내용 검색인 경우 key 값 "tc"-->
			<when test='key=="tc"'>
				AND (STUDY_BOARD_TITLE LIKE '%' || #{query} || '%'
				OR STUDY_BOARD_CONTENT LIKE '%' || #{query} || '%')
			</when>
			
			<!-- 작성자 검색인 경우 key 값 "w"-->
			<otherwise>
				AND MEMBER_NICKNAME LIKE '%'||#{query}||'%'
			</otherwise>
		</choose>
		
		ORDER BY STUDY_BOARD_NO DESC
	</select>
	
	
		<!-- 특정 게시판의 지정된 페이지 목록 조회 -->
	<select id="selectStudyBoardList">
		SELECT STUDY_BOARD_NO, STUDY_BOARD_TITLE, READ_COUNT, MEMBER_NICKNAME,
		(SELECT COUNT(*)
		FROM "STUDY_COMMENT" C
		WHERE C.STUDY_BOARD_NO = B.STUDY_BOARD_NO ) COMMENT_COUNT,
		
		(SELECT COUNT(*)
		FROM "STUDY_BOARD_LIKE" L
		WHERE L.STUDY_BOARD_NO =B. STUDY_BOARD_NO) LIKE_COUNT,
		<![CDATA[
		CASE
			
			WHEN SYSDATE - STUDY_BOARD_WRITE_DATE < 1 / 24 / 60
			THEN FLOOR((SYSDATE - STUDY_BOARD_WRITE_DATE) * 24 * 60 * 60) || '초 전'
			
			WHEN SYSDATE - STUDY_BOARD_WRITE_DATE < 1 /24
			THEN FLOOR((SYSDATE - STUDY_BOARD_WRITE_DATE) * 24 * 60)|| '분 전'
			
			WHEN SYSDATE - STUDY_BOARD_WRITE_DATE < 1
			THEN FLOOR((SYSDATE - STUDY_BOARD_WRITE_DATE) * 24) || '시간 전'
			
			ELSE TO_CHAR(STUDY_BOARD_WRITE_DATE, 'YYYY-MM-DD')
			END STUDY_BOARD_WRITE_DATE
		]]>
		
		FROM "STUDY_BOARD" B
		JOIN "MEMBER" M ON(B.MEMBER_NO = M.MEMBER_NO)
		WHERE B.STUDY_BOARD_DEL_FL ='N'
		AND B.STUDY_NO = #{studyNo}
		ORDER BY STUDY_BOARD_NO DESC
	</select>
	
	<!-- 게시글 조회 -->
	<select id="getStudyBoardListCount">
		SELECT COUNT(*)
		FROM "STUDY_BOARD"
		WHERE STUDY_BOARD_DEL_FL = 'N'
	</select>
	
		<!-- 공지글 상세 조회 -->
	<select id="studyBoardOne">
		SELECT STUDY_BOARD_NO, STUDY_BOARD_TITLE, STUDY_BOARD_CONTENT, READ_COUNT,
		MEMBER_NO, MEMBER_NICKNAME, PROFILE_IMG,
		TO_CHAR(STUDY_BOARD_WRITE_DATE, 'YYYY"년" MM"월" DD"일" HH24:MI') STUDY_BOARD_WRITE_DATE,
		TO_CHAR(STUDY_BOARD_UPDATE_DATE, 'YYYY"년" MM"월" DD"일" HH24:MI') STUDY_BOARD_UPDATE_DATE
		
		FROM "STUDY_BOARD"
		JOIN "MEMBER" USING(MEMBER_NO)
		WHERE STUDY_BOARD_DEL_FL = 'N'
		AND STUDY_BOARD_NO = #{studyBoardNo}
	</select>
	
		<!-- 공지사항 조회수 1 증가 -->
	<update id="updateStudyBoardCount">
		UPDATE "STUDY_BOARD" SET
		READ_COUNT = READ_COUNT + 1
		WHERE STUDY_BOARD_NO = #{studyBoardNo}
	</update>
	
	<!-- 조회 수 조회 -->
	<select id="selectStudyBoardCount">
		SELECT READ_COUNT
		FROM "STUDY_BOARD"
		WHERE STUDY_BOARD_NO = #{studyBoardNo}
	</select>
	
	<!-- 게시글 좋아요 체크 -->
	<insert id="insertStudyBoardLike">
		INSERT INTO "STUDY_BOARD_LIKE"
		VALUES(#{studyBoardNo}, #{memberNo})
	</insert>
	
	<!-- 게시글 좋아요 해제 -->
	<delete id="deleteStudyBoardLike">
		DELETE FROM "STUDY_BOARD_LIKE"
		WHERE MEMBER_NO = #{memberNo}
		AND STUDY_BOARD_NO = #{studyBoardNo}
	</delete>
	
	<!-- 게시글 좋아요 개수 조회 -->
	<select id="selectLikeCount">
		SELECT COUNT(*) FROM "STUDY_BOARD_LIKE"
		WHERE STUDY_BOARD_NO = #{studyBoardNo}
	</select>

</mapper>